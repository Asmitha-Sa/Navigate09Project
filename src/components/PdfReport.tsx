
import React, { useRef } from 'react';
import { usePDF } from 'react-to-pdf';
import { Button } from '@/components/ui/button';
import { motion } from 'framer-motion';
import { FileText, Download } from 'lucide-react';

interface ComplianceIssue {
  rule: string;
  description: string;
  status: 'pass' | 'fail' | 'warning';
  details?: string;
}

interface ComplianceResult {
  overallStatus: 'compliant' | 'non-compliant' | 'partial';
  score: number;
  issues: ComplianceIssue[];
  summary: string;
}

interface PdfReportProps {
  results: ComplianceResult;
}

const PdfReport = ({ results }: PdfReportProps) => {
  const { toPDF, targetRef } = usePDF({
    filename: 'retail-compliance-report.pdf',
  });
  
  const statusColors: Record<string, string> = {
    'compliant': 'text-green-600',
    'non-compliant': 'text-red-600',
    'partial': 'text-yellow-600',
    'pass': 'text-green-600',
    'fail': 'text-red-600',
    'warning': 'text-yellow-600',
  };
  
  return (
    <div className="mt-6">
      <motion.div
        whileHover={{ scale: 1.02 }}
        whileTap={{ scale: 0.98 }}
      >
        <Button 
          onClick={() => toPDF()} 
          className="w-full bg-retail-blue hover:bg-blue-800"
        >
          <FileText className="mr-2 h-4 w-4" />
          Generate PDF Report
          <Download className="ml-2 h-4 w-4" />
        </Button>
      </motion.div>
      
      {/* Hidden div that will be converted to PDF */}
      <div className="hidden">
        <div ref={targetRef} className="p-8 bg-white max-w-4xl mx-auto">
          <div className="text-center mb-8">
            <h1 className="text-3xl font-bold text-retail-blue">Retail Compliance Report</h1>
            <p className="text-gray-600">Generated on {new Date().toLocaleDateString()}</p>
          </div>
          
          <div className="mb-8 p-4 border rounded-lg">
            <h2 className="text-xl font-semibold mb-2">Overall Compliance Status</h2>
            <p className={`text-lg font-medium ${statusColors[results.overallStatus]}`}>
              {results.overallStatus.toUpperCase()}: {results.score}%
            </p>
            <p className="mt-2">{results.summary}</p>
          </div>
          
          <div>
            <h2 className="text-xl font-semibold mb-4">Compliance Issues</h2>
            {results.issues.map((issue, index) => (
              <div key={index} className="mb-4 p-3 border-l-4 border-gray-200 bg-gray-50">
                <h3 className={`font-medium ${statusColors[issue.status]}`}>{issue.rule}</h3>
                <p className="text-gray-700">{issue.description}</p>
                {issue.details && <p className="text-gray-500 text-sm mt-1">{issue.details}</p>}
              </div>
            ))}
          </div>
          
          <div className="mt-8 text-center text-sm text-gray-500">
            <p>This report was automatically generated by the AI Retail Compliance Validator.</p>
            <p>&copy; {new Date().getFullYear()} Retail Compliance Technologies</p>
          </div>
        </div>
      </div>
    </div>
  );
};

export default PdfReport;
